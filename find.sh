#!/bin/bash

# -print 	find 命令将匹配的文件输出到标准输出
# -exec 	find 命令对匹配的文件执行该参数所给出的 shell 命令
# -name 	按照文件名查找文件
# -type 	查找某一类型的文件
# -prune 	使用这一选项可以使 find 命令不在当前指定的目录中查找，如果同时使用 -depth 选项，那么 -prune 将被 find 命令忽略
# -user 	按照文件属主来查找文件
# -group 	按照文件所属的组来查找文件
# -mtime -n +n 	按照文件的更改时间来查找文件，-n 表示文件更改时间距现在小于 n 天，+n 表示文件更改时间距现在大于 n 天，find 命令还有 -atime 和 -ctime 选项


find . -print
echo '-----------------------------------'

find . -name "*.txt" -print
echo '-----------------------------------'

find .  \( -name "*.md" -or -name "*.txt" \)
echo '-----------------------------------'

find . ! -name "*.txt"
echo '-----------------------------------'

# b 快设备
# c 字符文件
# d 目录文件
# f 普通文件
# l 符号连接

find . -type l -name "*.txt" -print

echo '-------------------------------------'
find . -type f -name "*.sh" -perm 777

echo '--------------------------------------'
find . -type f -user lin
echo '-------------------------------------'

find . -type f \( ! -perm 777 -and ! -perm 644   \)

echo '--------------------------------------'

# {}其实它就是一个占位符，在 find 命令的执行过程中会不断地替换成当前找到的文件
find . -name "*.sh" -exec ls -l {} \;
echo '--------------------------------------'

find . -name "*.sh" -exec cat {} \; > all.sh

echo '---------------------------------------'

find . -name "*.sh" -exec ./cmd.sh {} \;

echo '--------------------------------------'


